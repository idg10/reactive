<Project>

  <Import Project="Sdk.props" Sdk="MSBuild.Sdk.Extras" />
  <PropertyGroup>
    <TargetFrameworks>net472;net6.0;net6.0-windows10.0.19041.0</TargetFrameworks>
    <NoWarn>$(NoWarn);CS0618</NoWarn>
  </PropertyGroup>

  <PropertyGroup Condition="$(TargetFramework.StartsWith('net6.0-windows')) or '$(TargetFramework)' == 'net472'">
    <UseWPF>true</UseWPF>
    <UseWindowsForms>true</UseWindowsForms>
  </PropertyGroup>

  <ItemGroup>
    <Content Include="xunit.runner.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <!--
    We need to be on a sufficiently recent version of the test framework, because we need this fix:
      https://github.com/microsoft/testfx/pull/1071
    Without this, the test runner fails to process Windows-version-specific TFMs for .NET 6.0.
    Since the various libraries that require net6.0-windows all specify a minimum version (10.0.19041
    for reasons not currently clear to me; idg10) this test project needs to specify at least as new
    a version. If we write just net6.0-windows, that turns out to imply Windows 7.0, so it is not
    considered compatible with a net6.0-windows10.0.19041 library.
    Before that PR was merged, the test runner wouldn't work if the host specified a TFM with a
    specific Windows version.
-->
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="17.4.1" />
    <PackageReference Include="MSTest.TestAdapter" Version="3.0.2" />
    <PackageReference Include="MSTest.TestFramework" Version="3.0.2" />
    <PackageReference Include="xunit.assert" Version="2.4.2" />
    <ProjectReference Include="..\..\src\System.Reactive\System.Reactive.csproj" />
    <ProjectReference Include="..\..\src\System.Reactive.Observable.Aliases\System.Reactive.Observable.Aliases.csproj" />
    <ProjectReference Include="..\..\src\Microsoft.Reactive.Testing\Microsoft.Reactive.Testing.csproj" />
  </ItemGroup>

  <ItemGroup Condition="$(TargetFramework.StartsWith('net6.0-windows')) or '$(TargetFramework)' == 'net472'">
  <!--<ItemGroup Condition="'$(TargetFramework)' == 'net472'">-->
    <ProjectReference Include="..\..\src\System.Reactive.Windows.Forms\System.Reactive.Windows.Forms.csproj" />
  </ItemGroup>

  <!--
  Should be != 'net6.0' but trying to diagnose failures in net6.0-windows.
  Testing the hypothesis that the difference is something to do with the set of projects referenced. Doesn't seem to change anything though.
  -->
  <ItemGroup Condition="'$(TargetFramework)' != 'net6.0'">
    <ProjectReference Include="..\..\src\System.Reactive.Windows.Threading\System.Reactive.Windows.Threading.csproj" />
  </ItemGroup>

  <Import Project="Sdk.targets" Sdk="MSBuild.Sdk.Extras" />

  <PropertyGroup Condition="$(TargetFramework.StartsWith('net6.0-windows'))">
    <!--
    net6.0 ends up with:
    TRACE;DEBUG;NET;NET6_0;NETCOREAPP

    net6.0-windows ends up with
    TRACE;HAS_WINRT;HAS_WINFORMS;HAS_WPF;HAS_DISPATCHER;DESKTOPCLR;WINDOWS;CSWINRT;DEBUG;NET;NET6_0;NETCOREAPP

    -->

    <!--<DefineConstants>TRACE;DEBUG;NET;NET6_0;NETCOREAPP</DefineConstants>-->
  </PropertyGroup>

</Project>